#include "ui.h"

void ui::testCorrect() {
	cout << endl << "Все тесты были пройдены." << endl;
}

void ui::testIncorrect(){
	cout << endl << "К сожалению не все тесты были пройдены." << endl;
}
void ui::coutResult() {
	cout << endl << "Результат преобразования текста: " << endl;
}

void ui::coutOriginal() {
	cout << endl << "Ваш исходный текст: " << endl;
}

void ui::foutResult() {
	cout << endl << "Результат преобразования текста: " << endl;
}

void ui::coutInfoOnInital() {
	cout << endl << "Вы ввели данные с консоли." << endl << "Сохранять исходные данные в файл ?" << endl;
	cout << "Нажмите: " << endl;
	cout << "[1] - если сохранять" << endl;
	cout << "[0] - если не сохранять" << endl;
}

void ui::dataSave() {
	cout << endl << "Запись завершена." << endl;
}

void ui::dataNotSave() {
	cout << endl << "Запись запрещена. Повторите ввод." << endl;

}

void ui::fileExist() {
	cout << endl << "Файл уже существует." << endl;
	cout << "[0] - Перезаписать существующий файл." << endl;
	cout << "[1] - Повторить ввод." << endl;
}

void ui::saveIn() {
	cout << endl << "Сохранить в: ";
}

void ui::cinNameOfFile() {
	cout << endl << "Введите имя файла из которого считываем" << endl;
	cout << "Загрузить из: ";
}

void ui::cinContinue() {
	cout << "[ Если вы хотите продолжить ввод нажмите [1] иначе [0] ]" << endl;
	cout << "> ";
}

void ui::cinText() {
	cout << endl << "Начните вводить ваш текст: " << endl;
}

void ui::cinQuantity() {
	cout << endl << "Введите минимальную длину последовательности, которая подвергнется замене" << endl;
}

void ui::outGretting() {
	cout << endl << "Приветствуем вас в программной реализации контрольной работы №4" << endl;
	cout << endl << "Задание предназначено для приобретения практического опыта работы с классом std::string в языке программирования С++. " << endl
		<< "Цель контрольной работы состоит в формировании знаний и умений :" << endl
		<< "– по использованию различных способов описания и формирования символьных строк," << endl
		<< "– по использованию методов чтения и записи строк в текстовых файлах," << endl
		<< "– по использованию методов чтения и анализа потоковых данных, вводимых с клавиатуры." << endl
		<< "Во всех программах необходимо предусмотреть возможность многострочного ввода с клавиатуры" << endl
		<< "Найти в тексте все последовательности идущих подряд одинаковых символов и заменить их сигнатурой{ символ, количество }." << endl
		<< "Минимальная длинна последовательности, которая может подвергаться замене, задается пользователем." << endl
		<< "Предусмотреть режим восстановления оригинального текста." << endl
		<< "Пример: текст «длинношеее животное» должен быть заменѐн текстом «длиннош{ e, 3 } животное»." << endl;
}

void ui::printInputWays() {
	cout << endl << "Блок ввода" << endl;
	cout << "Нажмите: " << endl;
	cout << "[1] - для ввода текста из файла" << endl;
	cout << "[2] - для ввода текста с консоли" << endl;
	cout << "[3] - для выхода из программы" << endl;
	cout << "Ввод: ";
}

void ui::printActionWays() {
	cout << endl << "Блок исполнения задачи" << endl;
	cout << "Нажмите: " << endl;
	cout << "[1] - для начала преобразования текста" << endl;
	cout << "[2] - для возврата к способам ввода" << endl;
	cout << "Ввод: ";
}

void ui::printOutputWays() {
	cout << endl << "Блок вывода" << endl;
	cout << "Нажмите: " << endl;
	cout << "[1] - для вывода результатов в файл" << endl;
	cout << "[2] - для вывода результатов в консоль" << endl;
	cout << "[3] - для возврата к исполнению задания" << endl;
	cout << "Ввод: ";
}

void ui::returnOriginalString() {
	cout << "Вам предоставляется возможность вернуть исходный текст." << endl;
	cout << "Нажмите: " << endl;
	cout << "[1] - для возврата исходного текста" << endl;
	cout << "[0] - для продолжения программы" << endl;
}
